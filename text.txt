0 install and mount method-override 
DONE

1 Display an Add Skill link on the index view that when clicked, displays a new view that displays a form for entering a new Dev Skill.

    1. Identify the "proper" Route (Verb + Path)
        GET /skills/new to see a new skill form 
    2. Create the UI that issues a request that matches that route. (Add an <a> or a <from>)
        a tag on the skills/index view that points to views/skills/new
    3. Define the route on the server and map it to a controller action.
        router.get('/new', skillsCtrl.new)
    4. Code and export the controller action.

    5. res.render a view in the case of a GET request, or res.redirect if data was changed. Write the view template if it does not already exist.
        res.render('skills/new')



2 When a new Dev Skill is submitted, the skill is added to the "database" and redirect the user to the index view.

    1. Identify the "proper" Route (Verb + Path)
        POST /skills
    2. Create the UI that issues a request that matches that route. (Add an <a> or a <from>)
        form 
    3. Define the route on the server and map it to a controller action.
        route.post('/', skillsCtrl.create)
    4. Code and export the controller action.
        function createSkill () {
            skillsDb.push.... 
        };
    5. res.render a view in the case of a GET request, or res.redirect if data was changed. Write the view template if it does not already exist.
        res.redirect('');

3 On the show view, display a Delete Skill link that when clicked, deletes the skill from the "database" and redirects to the index view.

    1. Identify the "proper" Route (Verb + Path)
        DELETE /skills/:id
    2. Create the UI that issues a request that matches that route. (Add an <a> or a <from>)
        a form with button on show view 
    3. Define the route on the server and map it to a controller action.
        router.delete('/:id', skillsCtrl.delete);
    4. Code and export the controller action.
    5. res.render a view in the case of a GET request, or res.redirect if data was changed. Write the view template if it does not already exist.